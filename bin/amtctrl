#!/usr/bin/env python

import argparse
import sys

import requests

import amt.client
import amt.wsman

def parse_args():
    parser = argparse.ArgumentParser(
        'amtctrl',
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description=("""
Control Commands
----------------

amtctrl <host> <passwd> [command]

command is one of:

  on - power on
  off - power off
  reboot - reboot
  pxeboot - reboot the machine and pxeboot on the next reboot cycle
  status - dump cim power status
"""))

    parser.add_argument('host', metavar='name',
                        help='')
    parser.add_argument('passwd', metavar='passwd',
                        help='')
    parser.add_argument('command', metavar='command', nargs='?',
                        help='')
    return parser.parse_known_args()[0]

def main():
    args = parse_args()

    host = args.host
    passwd = args.passwd
    vncpasswd = None

    client = amt.client.Client(host, passwd, vncpasswd=vncpasswd, protocol="https")
    try:
        if args.command == "on":
            client.power_on()
        elif args.command == "off":
            client.power_off()
        elif args.command == "reboot":
            client.power_cycle()
        elif args.command == "pxeboot":
            client.pxe_next_boot()
            client.power_cycle()
        elif args.command == "status":
            print(amt.wsman.friendly_power_state(client.power_status()))
        else:
            print(("Unknown command %s"
                   "try one of on, off, reboot, pxeboot, "
                   "status")
                  % args.command)
    except requests.exceptions.HTTPError as e:
        print("Error: %s" % e)


if __name__ == "__main__":
    sys.exit(main())
